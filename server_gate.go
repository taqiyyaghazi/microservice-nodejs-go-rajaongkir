package main

import (
    "io/ioutil"
	"log"
	_ "github.com/go-sql-driver/mysql"
    "net/http"
    "github.com/gorilla/mux"
    "encoding/json"
    "fmt"
)

type AutoGenerated []struct {
    Sku         string `json:"Sku"`
    ProductName string `json:"Product_name"`
    Stocks      int    `json:"Stocks"`
}

type Ongkir struct {
    ProvinceID string
    Province string 
    CityID   string
    CityName string
}

func getDataServer1(w http.ResponseWriter, r *http.Request){
    url := "http://localhost:4321/getOngkir"
    req, _ := http.NewRequest("GET", url, nil)
    res, _ := http.DefaultClient.Do(req)
    defer res.Body.Close()
    body, _ := ioutil.ReadAll(res.Body)

    //fmt.Println(res)
    //fmt.Println(string(body))
    var ongkir Ongkir
    json.Unmarshal(body, &ongkir)
    /*ongkir.ProvinceID = ongkir.ProvinceID
    ongkir.Province = ongkir.Province
    ongkir.CityName = ongkir.CityID
    ongkir.CityID = ongkir.CityName*/
    json.NewEncoder(w).Encode(ongkir)
}
func defaults(w http.ResponseWriter, r *http.Request){
    fmt.Println("halo")
}

func getDataServer2(w http.ResponseWriter, r *http.Request){
    url := "http://localhost:5432/getProduct"
    req, _ := http.NewRequest("GET", url, nil)
    res, _ := http.DefaultClient.Do(req)
    defer res.Body.Close()
    body, _ := ioutil.ReadAll(res.Body)

    //fmt.Println(res)
    //fmt.Println(string(body))
    var products AutoGenerated
    json.Unmarshal(body, &products)
    json.NewEncoder(w).Encode(products)
}

func main() {
    router := mux.NewRouter()
    router.HandleFunc("/getDataServer1",getDataServer1).Methods("GET") // menjalurkan URL untuk dapat mengkases data JSON API product ke /getproducts
    router.HandleFunc("/getDataServer2",getDataServer2).Methods("GET") // menjalurkan URL untuk dapat mengkases data JSON API product ke /getproducts
    router.HandleFunc("/defaults",defaults).Methods("GET") // menjalurkan URL untuk dapat mengkases data JSON API product ke /getproducts
    http.Handle("/",router)
    log.Fatal(http.ListenAndServe(":1234",router))
}